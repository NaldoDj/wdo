// Testing Message standard Dialog Boxes

#include "FiveWin.ch"

extern Set

//----------------------------------------------------------------------------//

function Main()

   local oWnd
   local cName := "Easily editing a string"

   MsgWait( "Hello world. This is a waiting message!" )

   MsgRun( "This message will be destroyed in 5 seconds",;
           "Now with caption update",;
            { | oDlg | UpdCaption( oDlg ) } )

   if MsgGet( "Please type your name",;          // Title
              "Your Name:",;                     // Label
              @cName )                           // A variable by reference

      MsgStop( "Hello " + cName, "A Stop icon Message" )
      MsgStop( "Testing defaults" )

   else

      MsgAlert( "Hey, you did not typed your Name", "Alerting!" )

   endif

   MsgDate( Date() + 2, "Select a date" )

   MsgAlert( "FiveWin power!" )

   MsgLogo( "..\bitmaps\FW.bmp", 6 )   // Shows a splash logo for 6 secs

   DEFINE WINDOW oWnd TITLE "See how the logo is still showing..."

   ACTIVATE WINDOW oWnd

   MsgAbout( "Powerfull Msg functions", "FiveWin power" )

   MsgInfo( "Testing defaults" )

   MsgInfo( "General information Message", "Info Title" )

   If MsgYesNo( "Are you sure you want to go", "Please select" )

      nMsgBox( "A Normal message", "Ok, Bye!" )
      nMsgBox( "Testing defaults" )

   else

      Alert( "Typicall Clipper Alert function" )   // It does not support
                                                   // all Clipper features
                                                   // yet
   endif

   if MsgRetryCancel( "Lets try again ?" )
      MsgInfo( "You selected Retry" )
   else
      MsgInfo( "You selected Cancel" )
   endif

   // New MsgNoYes()

   MsgNoYes( "No is default now", "Don't do it" )

return nil

//----------------------------------------------------------------------------//

static function UpdCaption( oDlg )

   local nFor, nStart

   for nFor := 4 to 0 step -1
       nStart = GetTickCount()
       while ( GetTickCount() - nStart ) < 1000
       end
       oDlg:cMsg := "This message will be destroyed in "+;
                     LTrim( Str( nFor ) ) + " second" + ;
                     If( nFor > 1, "s", "" )
       oDlg:Refresh()
       SysRefresh()
   next

return nil

//----------------------------------------------------------------------------//